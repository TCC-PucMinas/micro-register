syntax = "proto3";

option go_package = "/communicate";

message AuthenticateValidateRequest {
  string email = 1;
  string password = 2;
}

message Roles {
  string id = 1;
  string name  = 2;
}


message UserResponse {
  string id = 1;
  string name = 2;
  string email = 3;
  repeated Roles Roles = 4;
}

message AuthenticateValidateResponse {
  string access_token = 1;
  string refresh_token = 2;
  int64 expired = 3;
  UserResponse UserResponse = 4;
}

message RefreshRequest {
  string refresh_token = 1;
}

message RefreshResponse {
  string access_token = 1;
  string refresh_token = 2;
  int64 expired = 3;
}
message TokenRequest {
  string access_token = 1;
  string path = 2;
  string method = 3;
}

message TokenResponse {
  bool validate = 1;
}

message EmailRequest  {
  string email = 1;
}

message EmailResponse {
  bool valid = 1;
}

message ForgotRequest {
  string email = 1;
}

message ForgotResponse {
  bool sender = 1;
}

message NewPasswordForgotRequest {
  string password = 2;
  string forgot = 3;
}

message NewPasswordForgotResponse {
  bool modify = 1;
}

message ValidateForgotCodeRequest  {
  string forgot = 1;
}

message ValidateForgotCodeResponse {
  bool valid = 1;
}

service AuthenticateCommunicate {
  rpc Authenticate (AuthenticateValidateRequest) returns (AuthenticateValidateResponse) {};
  rpc RefreshToken (RefreshRequest) returns (RefreshResponse) {};
  rpc ValidateToken (TokenRequest) returns (TokenResponse) {};
  rpc ValidateEmail (EmailRequest) returns (EmailResponse) {};
  rpc ValidateForgotCode (ValidateForgotCodeRequest) returns (ValidateForgotCodeResponse) {};
  rpc ForgotPassword (ForgotRequest) returns (ForgotResponse) {};
  rpc SetNewPasswordForgot (NewPasswordForgotRequest) returns (NewPasswordForgotResponse) {};
}
